package keymanager

import (
	"sync"

	"github.com/prometheus/client_golang/prometheus"
)

var (
	computeRuntimeCount = prometheus.NewCounterVec(
		prometheus.CounterOpts{
			Name: "oasis_worker_keymanager_compute_runtime_count",
			Help: "Number of compute runtimes using the key manager.",
		},
		[]string{"runtime"},
	)

	policyUpdateCount = prometheus.NewCounterVec(
		prometheus.CounterOpts{
			Name: "oasis_worker_keymanager_policy_update_count",
			Help: "Number of key manager policy updates.",
		},
		[]string{"runtime"},
	)

	consensusEphemeralSecretEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_consensus_ephemeral_secret_epoch_number",
			Help: "Epoch number of the latest ephemeral secret.",
		},
		[]string{"runtime"},
	)

	consensusMasterSecretGenerationNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_consensus_master_secret_generation_number",
			Help: "Generation number of the latest master secret.",
		},
		[]string{"runtime"},
	)

	consensusMasterSecretRotationEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_consensus_master_secret_rotation_epoch_number",
			Help: "Epoch number of the latest master secret rotation.",
		},
		[]string{"runtime"},
	)

	consensusMasterSecretProposalEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_consensus_master_secret_proposal_epoch_number",
			Help: "Epoch number of the latest master secret proposal.",
		},
		[]string{"runtime"},
	)

	consensusMasterSecretProposalGenerationNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_consensus_master_secret_proposal_generation_number",
			Help: "Generation number of the latest master secret proposal.",
		},
		[]string{"runtime"},
	)

	enclaveEphemeralSecretEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_ephemeral_secret_epoch_number",
			Help: "Epoch number of the latest ephemeral secret loaded into the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveMasterSecretGenerationNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_master_secret_generation_number",
			Help: "Generation number of the latest master secret as seen by the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveMasterSecretProposalEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_master_secret_proposal_epoch_number",
			Help: "Epoch number of the latest master secret proposal loaded into the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveMasterSecretProposalGenerationNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_master_secret_proposal_generation_number",
			Help: "Generation number of the latest master secret proposal loaded into the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveGeneratedMasterSecretEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_generated_master_secret_epoch_number",
			Help: "Epoch number of the latest master secret generated by the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveGeneratedMasterSecretGenerationNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_generated_master_secret_generation_number",
			Help: "Generation number of the latest master secret generated by the enclave.",
		},
		[]string{"runtime"},
	)

	enclaveGeneratedEphemeralSecretEpochNumber = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Name: "oasis_worker_keymanager_enclave_generated_ephemeral_secret_epoch_number",
			Help: "Epoch number of the latest ephemeral secret generated by the enclave.",
		},
		[]string{"runtime"},
	)

	keymanagerWorkerCollectors = []prometheus.Collector{
		computeRuntimeCount,
		policyUpdateCount,
		consensusEphemeralSecretEpochNumber,
		consensusMasterSecretGenerationNumber,
		consensusMasterSecretRotationEpochNumber,
		consensusMasterSecretProposalEpochNumber,
		consensusMasterSecretProposalGenerationNumber,
		enclaveEphemeralSecretEpochNumber,
		enclaveMasterSecretGenerationNumber,
		enclaveMasterSecretProposalEpochNumber,
		enclaveMasterSecretProposalGenerationNumber,
		enclaveGeneratedMasterSecretEpochNumber,
		enclaveGeneratedMasterSecretGenerationNumber,
		enclaveGeneratedEphemeralSecretEpochNumber,
	}

	metricsOnce sync.Once
)

func initMetrics() {
	metricsOnce.Do(func() {
		prometheus.MustRegister(keymanagerWorkerCollectors...)
	})
}
